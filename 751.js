"use strict";(self.webpackChunkal=self.webpackChunkal||[]).push([[751],{4751:(z,e,t)=>{t.d(e,{WebGPURenderer:()=>ye});var e=t(8507),r=t(9313),d=t(341),s=t(9104),i=t(5611),a=t(4459),n=t(4e3),o=t(2067),u=t(6665),h=t(8475),F=t(7222);class c{init(){var e=new F.k({uTransformMatrix:{value:new r.u,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),t=(0,i.v)({name:"graphics",bits:[a.F,(0,n._)(s.k),o._Q,u.b]});this.shader=new h.M({gpuProgram:t,resources:{localUniforms:e}})}execute(e,t){var t=t.context,r=t.customShader||this.shader,s=e.renderer,{geometry:t,instructions:i}=s.graphicsContext.getContextRenderData(t),a=s.encoder,e=(a.setPipelineFromGeometryProgramAndState(t,r.gpuProgram,e.state),a.setGeometry(t),s.globalUniforms.bindGroup),t=(a.setBindGroup(0,e,r.gpuProgram),s.renderPipes.uniformBatch.getUniformBindGroup(r.resources.localUniforms,!0)),n=(a.setBindGroup(2,t,r.gpuProgram),i.instructions);for(let e=0;e<i.instructionSize;e++){var o,u=n[e];r.groups[1]=u.bindGroup,u.gpuBindGroup||(o=u.textures,u.bindGroup=(0,d.w)(o.textures,o.count),u.gpuBindGroup=s.bindGroup.getBindGroup(u.bindGroup,r.gpuProgram,1)),a.setBindGroup(1,u.bindGroup,r.gpuProgram),a.renderPassEncoder.drawIndexed(u.size,1,u.start)}}destroy(){this.shader.destroy(!0),this.shader=null}}c.extension={type:[e.Ag.WebGPUPipesAdaptor],name:"graphics"};var H=t(3391),l=t(4492),L=t(268);class p{init(){var e=(0,i.v)({name:"mesh",bits:[o.Ls,H.R,u.b]});this._shader=new h.M({gpuProgram:e,resources:{uTexture:l.g.EMPTY._source,uSampler:l.g.EMPTY._source.style,textureUniforms:{uTextureMatrix:{type:"mat3x3<f32>",value:new r.u}}}})}execute(e,t){var r=e.renderer;let s=t._shader;if(s){if(!s.gpuProgram)return void(0,L.R)("Mesh shader has no gpuProgram",t.shader)}else(s=this._shader).resources.uTexture=t.texture.source,s.resources.uSampler=t.texture.source.style,s.resources.textureUniforms.uniforms.uTextureMatrix=t.texture.textureMatrix.mapCoord;var i=s.gpuProgram;i.autoAssignGlobalUniforms&&(s.groups[0]=r.globalUniforms.bindGroup),i.autoAssignLocalUniforms&&(i=e.localUniforms,s.groups[1]=r.renderPipes.uniformBatch.getUniformBindGroup(i,!0)),r.encoder.draw({geometry:t._geometry,shader:s,state:t.state})}destroy(){this._shader.destroy(!0),this._shader=null}}p.extension={type:[e.Ag.WebGPUPipesAdaptor],name:"mesh"};var f=t(7547);const g=f.U.for2d();class m{init(){var e=(0,i.v)({name:"batch",bits:[a.F,(0,n._)(s.k),u.b]});this._shader=new h.M({gpuProgram:e,groups:{}})}start(e,t){var e=e.renderer,r=e.encoder,s=this._shader.gpuProgram,t=(this._geometry=t,r.setGeometry(t),g.blendMode="normal",e.pipeline.getPipeline(t,s,g),e.globalUniforms.bindGroup);r.resetBindGroup(1),r.setBindGroup(0,t,s)}execute(e,t){var r=this._shader.gpuProgram,e=e.renderer,s=e.encoder,i=(t.bindGroup||(i=t.textures,t.bindGroup=(0,d.w)(i.textures,i.count)),g.blendMode=t.blendMode,e.bindGroup.getBindGroup(t.bindGroup,r,1)),r=e.pipeline.getPipeline(this._geometry,r,g);t.bindGroup._touch(e.textureGC.count),s.setPipeline(r),s.renderPassEncoder.setBindGroup(1,i),s.renderPassEncoder.drawIndexed(t.size,1,t.start)}destroy(){this._shader.destroy(!0),this._shader=null}}m.extension={type:[e.Ag.WebGPUPipesAdaptor],name:"batch"};var D=t(2855),_=t(1293),W=t(5099);class b{constructor(e){this._hash=Object.create(null),this._renderer=e}contextChange(e){this._gpu=e}getBindGroup(e,t,r){return e._updateKey(),this._hash[e._key]||this._createBindGroup(e,t,r)}_createBindGroup(t,e,r){var s=this._gpu.device,i=e.layout[r],a=[],n=this._renderer;for(const h in i){var o,u,d=t.resources[h]??t.resources[i[h]];let e;"uniformGroup"===d._resourceType?(n.ubo.updateUniformGroup(o=d),o=o.buffer,e={buffer:n.buffer.getGPUBuffer(o),offset:0,size:o.descriptor.size}):"buffer"===d._resourceType?(o=d,e={buffer:n.buffer.getGPUBuffer(o),offset:0,size:o.descriptor.size}):"bufferResource"===d._resourceType?(u=d,e={buffer:n.buffer.getGPUBuffer(u.buffer),offset:u.offset,size:u.size}):"textureSampler"===d._resourceType?e=n.texture.getGpuSampler(d):"textureSource"===d._resourceType&&(e=n.texture.getGpuSource(d).createView({})),a.push({binding:i[h],resource:e})}e=n.shader.getProgramData(e).bindGroups[r],r=s.createBindGroup({layout:e,entries:a});return this._hash[t._key]=r}destroy(){for(const e of Object.keys(this._hash))this._hash[e]=null;this._hash=null,this._renderer=null}}b.extension={type:[e.Ag.WebGPUSystem],name:"bindGroup"};var I=t(6736);class x{constructor(){this._gpuBuffers=Object.create(null),this._managedBuffers=[]}contextChange(e){this._gpu=e}getGPUBuffer(e){return this._gpuBuffers[e.uid]||this.createGPUBuffer(e)}updateBuffer(e){var t=this._gpuBuffers[e.uid]||this.createGPUBuffer(e),r=e.data;return e._updateID&&r&&(e._updateID=0,this._gpu.device.queue.writeBuffer(t,0,r.buffer,0,(e._updateSize||r.byteLength)+3&-4)),t}destroyAll(){for(const e in this._gpuBuffers)this._gpuBuffers[e].destroy();this._gpuBuffers={}}createGPUBuffer(e){this._gpuBuffers[e.uid]||(e.on("update",this.updateBuffer,this),e.on("change",this.onBufferChange,this),e.on("destroy",this.onBufferDestroy,this));var t=this._gpu.device.createBuffer(e.descriptor);return e._updateID=0,e.data&&((0,I.W)(e.data.buffer,t.getMappedRange()),t.unmap()),this._gpuBuffers[e.uid]=t,this._managedBuffers.push(e),t}onBufferChange(e){this._gpuBuffers[e.uid].destroy(),e._updateID=0,this._gpuBuffers[e.uid]=this.createGPUBuffer(e)}onBufferDestroy(e){this._managedBuffers.splice(this._managedBuffers.indexOf(e),1),this._destroyBuffer(e)}destroy(){this._managedBuffers.forEach(e=>this._destroyBuffer(e)),this._managedBuffers=null,this._gpuBuffers=null}_destroyBuffer(e){this._gpuBuffers[e.uid].destroy(),e.off("update",this.updateBuffer,this),e.off("change",this.onBufferChange,this),e.off("destroy",this.onBufferDestroy,this),this._gpuBuffers[e.uid]=null}}x.extension={type:[e.Ag.WebGPUSystem],name:"buffer"};class y{constructor(e){this._colorMaskCache=15,this._renderer=e}setMask(e){this._colorMaskCache!==e&&(this._colorMaskCache=e,this._renderer.pipeline.setColorMask(e))}destroy(){this._renderer=null,this._colorMaskCache=null}}y.extension={type:[e.Ag.WebGPUSystem],name:"colorMask"};class v{constructor(e){this._renderer=e}async init(e){return this._initPromise||(this._initPromise=this._createDeviceAndAdaptor(e).then(e=>{this.gpu=e,this._renderer.runners.contextChange.emit(this.gpu)})),this._initPromise}contextChange(e){this._renderer.gpu=e}async _createDeviceAndAdaptor(e){const t=await navigator.gpu.requestAdapter({powerPreference:e.powerPreference,forceFallbackAdapter:e.forceFallbackAdapter});e=["texture-compression-bc","texture-compression-astc","texture-compression-etc2"].filter(e=>t.features.has(e)),e=await t.requestDevice({requiredFeatures:e});return{adapter:t,device:e}}destroy(){this.gpu=null,this._renderer=null}}v.extension={type:[e.Ag.WebGPUSystem],name:"device"},v.defaultOptions={powerPreference:void 0,forceFallbackAdapter:!1};class G{constructor(e){this._boundBindGroup=Object.create(null),this._boundVertexBuffer=Object.create(null),this._renderer=e}renderStart(){this.commandFinished=new Promise(e=>{this._resolveCommandFinished=e}),this.commandEncoder=this._renderer.gpu.device.createCommandEncoder()}beginRenderPass(e){this.endRenderPass(),this._clearCache(),this.renderPassEncoder=this.commandEncoder.beginRenderPass(e.descriptor)}endRenderPass(){this.renderPassEncoder&&this.renderPassEncoder.end(),this.renderPassEncoder=null}setViewport(e){this.renderPassEncoder.setViewport(e.x,e.y,e.width,e.height,0,1)}setPipelineFromGeometryProgramAndState(e,t,r,s){e=this._renderer.pipeline.getPipeline(e,t,r,s);this.setPipeline(e)}setPipeline(e){this._boundPipeline!==e&&(this._boundPipeline=e,this.renderPassEncoder.setPipeline(e))}_setVertexBuffer(e,t){this._boundVertexBuffer[e]!==t&&(this._boundVertexBuffer[e]=t,this.renderPassEncoder.setVertexBuffer(e,this._renderer.buffer.updateBuffer(t)))}_setIndexBuffer(e){var t;this._boundIndexBuffer!==e&&(t=2===(this._boundIndexBuffer=e).data.BYTES_PER_ELEMENT?"uint16":"uint32",this.renderPassEncoder.setIndexBuffer(this._renderer.buffer.updateBuffer(e),t))}resetBindGroup(e){this._boundBindGroup[e]=null}setBindGroup(e,t,r){this._boundBindGroup[e]!==t&&((this._boundBindGroup[e]=t)._touch(this._renderer.textureGC.count),t=this._renderer.bindGroup.getBindGroup(t,r,e),this.renderPassEncoder.setBindGroup(e,t))}setGeometry(e){for(const r in e.attributes){var t=e.attributes[r];this._setVertexBuffer(t.location,t.buffer)}e.indexBuffer&&this._setIndexBuffer(e.indexBuffer)}_setShaderBindGroups(e,t){for(const s in e.groups){var r=e.groups[s];t||this._syncBindGroup(r),this.setBindGroup(s,r,e.gpuProgram)}}_syncBindGroup(e){for(const r in e.resources){var t=e.resources[r];t.isUniformGroup&&this._renderer.ubo.updateUniformGroup(t)}}draw(e){var{geometry:e,shader:t,state:r,topology:s,size:i,start:a,instanceCount:n,skipSync:o}=e;this.setPipelineFromGeometryProgramAndState(e,t.gpuProgram,r,s),this.setGeometry(e),this._setShaderBindGroups(t,o),e.indexBuffer?this.renderPassEncoder.drawIndexed(i||e.indexBuffer.data.length,n||e.instanceCount,a||0):this.renderPassEncoder.draw(i||e.getSize(),n||e.instanceCount,a||0)}finishRenderPass(){this.renderPassEncoder&&(this.renderPassEncoder.end(),this.renderPassEncoder=null)}postrender(){this.finishRenderPass(),this._gpu.device.queue.submit([this.commandEncoder.finish()]),this._resolveCommandFinished(),this.commandEncoder=null}restoreRenderPass(){var e=this._renderer.renderTarget.adaptor.getDescriptor(this._renderer.renderTarget.renderTarget,!1,[0,0,0,1]),e=(this.renderPassEncoder=this.commandEncoder.beginRenderPass(e),this._boundPipeline),t={...this._boundVertexBuffer},r=this._boundIndexBuffer,s={...this._boundBindGroup},i=(this._clearCache(),this._renderer.renderTarget.viewport);this.renderPassEncoder.setViewport(i.x,i.y,i.width,i.height,0,1),this.setPipeline(e);for(const a in t)this._setVertexBuffer(a,t[a]);for(const n in s)this.setBindGroup(n,s[n],null);this._setIndexBuffer(r)}_clearCache(){for(let e=0;e<16;e++)this._boundBindGroup[e]=null,this._boundVertexBuffer[e]=null;this._boundIndexBuffer=null,this._boundPipeline=null}destroy(){this._renderer=null,this._gpu=null,this._boundBindGroup=null,this._boundVertexBuffer=null,this._boundIndexBuffer=null,this._boundPipeline=null}contextChange(e){this._gpu=e}}G.extension={type:[e.Ag.WebGPUSystem],name:"encoder",priority:1};var P=t(1957);class B{constructor(e){this._renderTargetStencilState=Object.create(null),(this._renderer=e).renderTarget.onRenderTargetChange.add(this)}onRenderTargetChange(e){let t=this._renderTargetStencilState[e.uid];t=t||(this._renderTargetStencilState[e.uid]={stencilMode:P.K.DISABLED,stencilReference:0}),this._activeRenderTarget=e,this.setStencilMode(t.stencilMode,t.stencilReference)}setStencilMode(e,t){var r=this._renderTargetStencilState[this._activeRenderTarget.uid],r=(r.stencilMode=e,r.stencilReference=t,this._renderer);r.pipeline.setStencilMode(e),r.encoder.renderPassEncoder.setStencilReference(t)}destroy(){this._renderer.renderTarget.onRenderTargetChange.remove(this),this._renderer=null,this._activeRenderTarget=null,this._renderTargetStencilState=null}}B.extension={type:[e.Ag.WebGPUSystem],name:"stencil"};var S=t(7047);const T={i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},f16:{align:2,size:2},"vec2<i32>":{align:8,size:8},"vec2<u32>":{align:8,size:8},"vec2<f32>":{align:8,size:8},"vec2<f16>":{align:4,size:4},"vec3<i32>":{align:16,size:12},"vec3<u32>":{align:16,size:12},"vec3<f32>":{align:16,size:12},"vec3<f16>":{align:8,size:6},"vec4<i32>":{align:16,size:16},"vec4<u32>":{align:16,size:16},"vec4<f32>":{align:16,size:16},"vec4<f16>":{align:8,size:8},"mat2x2<f32>":{align:8,size:16},"mat2x2<f16>":{align:4,size:8},"mat3x2<f32>":{align:8,size:24},"mat3x2<f16>":{align:4,size:12},"mat4x2<f32>":{align:8,size:32},"mat4x2<f16>":{align:4,size:16},"mat2x3<f32>":{align:16,size:32},"mat2x3<f16>":{align:8,size:16},"mat3x3<f32>":{align:16,size:48},"mat3x3<f16>":{align:8,size:24},"mat4x3<f32>":{align:16,size:64},"mat4x3<f16>":{align:8,size:32},"mat2x4<f32>":{align:16,size:32},"mat2x4<f16>":{align:8,size:16},"mat3x4<f32>":{align:16,size:48},"mat3x4<f16>":{align:8,size:24},"mat4x4<f32>":{align:16,size:64},"mat4x4<f16>":{align:8,size:32}};function V(e){var r=e.map(e=>({data:e,offset:0,size:0}));let s=0;for(let t=0;t<r.length;t++){var i=r[t];let e=T[i.data.type].size;var a=T[i.data.type].align;if(!T[i.data.type])throw new Error("[Pixi.js] WebGPU UniformBuffer: Unknown type "+i.data.type);1<i.data.size&&(e=Math.max(e,a)*i.data.size),s=Math.ceil(s/a)*a,i.size=e,i.offset=s,s+=e}return{uboElements:r,size:s=16*Math.ceil(s/16)}}var N=t(6423),j=t(1266);function K(e,t){var{size:r,align:s}=T[e.data.type],s=(s-r)/4;return`
         v = uv.${e.data.name};
         ${0!==t?`offset += ${t};`:""}

         arrayOffset = offset;

         t = 0;

         for(var i=0; i < ${e.data.size*(r/4)}; i++)
         {
             for(var j = 0; j < ${r/4}; j++)
             {
                 data[arrayOffset++] = v[t++];
             }
             ${0!=s?`arrayOffset += ${s};`:""}
         }
     `}function q(e){return(0,N.E)(e,"uboWgsl",K,j._)}class C extends S.W{constructor(){super({createUboElements:V,generateUboSync:q})}}C.extension={type:[e.Ag.WebGPUSystem],name:"ubo"};var Y=t(949),X=t(581),U=t(1132);class ${constructor({minUniformOffsetAlignment:e}){this._minUniformOffsetAlignment=256,this.byteIndex=0,this._minUniformOffsetAlignment=e,this.data=new Float32Array(65535)}clear(){this.byteIndex=0}addEmptyGroup(e){if(e>this._minUniformOffsetAlignment/4)throw new Error("UniformBufferBatch: array is too large: "+4*e);var t=this.byteIndex,e=t+4*e;if((e=Math.ceil(e/this._minUniformOffsetAlignment)*this._minUniformOffsetAlignment)>4*this.data.length)throw new Error("UniformBufferBatch: ubo batch got too big");return this.byteIndex=e,t}addGroup(t){var r=this.addEmptyGroup(t.length);for(let e=0;e<t.length;e++)this.data[r/4+e]=t[e];return r}destroy(){this._buffer.destroy(),this._buffer=null,this.data=null}}var M=t(3513);const w=128;class E{constructor(e){this._bindGroupHash=Object.create(null),this._buffers=[],this._bindGroups=[],this._bufferResources=[],this._renderer=e,this._batchBuffer=new $({minUniformOffsetAlignment:w});for(let t=0;t<2;t++){let e=U.S.UNIFORM|U.S.COPY_DST;0===t&&(e|=U.S.COPY_SRC),this._buffers.push(new Y.h({data:this._batchBuffer.data,usage:e}))}}renderEnd(){this._uploadBindGroups(),this._resetBindGroups()}_resetBindGroups(){for(const e in this._bindGroupHash)this._bindGroupHash[e]=null;this._batchBuffer.clear()}getUniformBindGroup(e,t){return!t&&this._bindGroupHash[e.uid]||(this._renderer.ubo.ensureUniformGroup(e),t=e.buffer.data,t=this._batchBuffer.addEmptyGroup(t.length),this._renderer.ubo.syncUniformGroup(e,this._batchBuffer.data,t/4),this._bindGroupHash[e.uid]=this._getBindGroup(t/w)),this._bindGroupHash[e.uid]}getUboResource(e){this._renderer.ubo.updateUniformGroup(e);e=e.buffer.data,e=this._batchBuffer.addGroup(e);return this._getBufferResource(e/w)}getArrayBindGroup(e){e=this._batchBuffer.addGroup(e);return this._getBindGroup(e/w)}getArrayBufferResource(e){e=this._batchBuffer.addGroup(e)/w;return this._getBufferResource(e)}_getBufferResource(e){var t;return this._bufferResources[e]||(t=this._buffers[e%2],this._bufferResources[e]=new X.d({buffer:t,offset:256*(e/2|0),size:w})),this._bufferResources[e]}_getBindGroup(e){var t;return this._bindGroups[e]||(t=new M.T({0:this._getBufferResource(e)}),this._bindGroups[e]=t),this._bindGroups[e]}_uploadBindGroups(){var t=this._renderer.buffer,r=this._buffers[0],s=(r.update(this._batchBuffer.byteIndex),t.updateBuffer(r),this._renderer.gpu.device.createCommandEncoder());for(let e=1;e<this._buffers.length;e++){var i=this._buffers[e];s.copyBufferToBuffer(t.getGPUBuffer(r),w,t.getGPUBuffer(i),0,this._batchBuffer.byteIndex)}this._renderer.gpu.device.queue.submit([s.finish()])}destroy(){for(let e=0;e<this._bindGroups.length;e++)this._bindGroups[e].destroy();this._bindGroups=null,this._bindGroupHash=null;for(let e=0;e<this._buffers.length;e++)this._buffers[e].destroy();this._buffers=null;for(let e=0;e<this._bufferResources.length;e++)this._bufferResources[e].destroy();this._bufferResources=null,this._batchBuffer.destroy(),this._bindGroupHash=null,this._renderer=null}}E.extension={type:[e.Ag.WebGPUPipes],name:"uniformBatch"};var Q=t(7084),J=t(7952),Z=t(1172);const ee={"point-list":0,"line-list":1,"line-strip":2,"triangle-list":3,"triangle-strip":4};class A{constructor(e){this._moduleCache=Object.create(null),this._bufferLayoutsCache=Object.create(null),this._pipeCache=Object.create(null),this._pipeStateCaches=Object.create(null),this._colorMask=15,this._multisampleCount=1,this._renderer=e}contextChange(e){this._gpu=e,this.setStencilMode(P.K.DISABLED),this._updatePipeHash()}setMultisampleCount(e){this._multisampleCount!==e&&(this._multisampleCount=e,this._updatePipeHash())}setRenderTarget(e){this._multisampleCount=e.msaaSamples,this._depthStencilAttachment=e.descriptor.depthStencilAttachment?1:0,this._updatePipeHash()}setColorMask(e){this._colorMask!==e&&(this._colorMask=e,this._updatePipeHash())}setStencilMode(e){this._stencilMode!==e&&(this._stencilMode=e,this._stencilState=Z.g[e],this._updatePipeHash())}setPipeline(e,t,r,s){e=this.getPipeline(e,t,r);s.setPipeline(e)}getPipeline(e,t,r,s){e._layoutKey||((0,Q.q)(e,t.attributeData),this._generateBufferKey(e)),s=s||e.topology;var i=e._layoutKey<<24|t._layoutKey<<16|r.data<<10|r._blendModeId<<5|ee[s];return this._pipeCache[i]||(this._pipeCache[i]=this._createPipeline(e,t,r,s)),this._pipeCache[i]}_createPipeline(e,t,r,s){var i=this._gpu.device,e=this._createVertexBufferLayouts(e),a=this._renderer.state.getColorTargets(r),n=(a[0].writeMask=this._stencilMode===P.K.RENDERING_MASK_ADD?0:this._colorMask,this._renderer.shader.getProgramData(t).pipeline),e={vertex:{module:this._getModule(t.vertex.source),entryPoint:t.vertex.entryPoint,buffers:e},fragment:{module:this._getModule(t.fragment.source),entryPoint:t.fragment.entryPoint,targets:a},primitive:{topology:s,cullMode:r.cullMode},layout:n,multisample:{count:this._multisampleCount},label:"PIXI Pipeline"},t=(this._depthStencilAttachment&&(e.depthStencil={...this._stencilState,format:"depth24plus-stencil8",depthWriteEnabled:r.depthTest,depthCompare:r.depthTest?"less":"always"}),i.createRenderPipeline(e));return t}_getModule(e){return this._moduleCache[e]||this._createModule(e)}_createModule(e){var t=this._gpu.device;return this._moduleCache[e]=t.createShaderModule({code:e}),this._moduleCache[e]}_generateBufferKey(t){var r=[];let s=0;var i=Object.keys(t.attributes).sort();for(let e=0;e<i.length;e++){var a=t.attributes[i[e]];r[s++]=a.location,r[s++]=a.offset,r[s++]=a.format,r[s++]=a.stride}var e=r.join("");return t._layoutKey=(0,J.X)(e,"geometry"),t._layoutKey}_createVertexBufferLayouts(a){if(this._bufferLayoutsCache[a._layoutKey])return this._bufferLayoutsCache[a._layoutKey];const n=[];return a.buffers.forEach(e=>{var t={arrayStride:0,stepMode:"vertex",attributes:[]},r=t.attributes;for(const i in a.attributes){var s=a.attributes[i];s.buffer===e&&(t.arrayStride=s.stride,t.stepMode=s.instance?"instance":"vertex",r.push({shaderLocation:s.location,offset:s.offset,format:s.format}))}r.length&&n.push(t)}),this._bufferLayoutsCache[a._layoutKey]=n}_updatePipeHash(){e=this._stencilMode,t=this._multisampleCount,s=this._colorMask,r=this._depthStencilAttachment;var e,t,r,s=s<<6|e<<3|r<<1|t;this._pipeStateCaches[s]||(this._pipeStateCaches[s]=Object.create(null)),this._pipeCache=this._pipeStateCaches[s]}destroy(){this._renderer=null,this._bufferLayoutsCache=null}}A.extension={type:[e.Ag.WebGPUSystem],name:"pipeline"};var S=t(7238),R=t(1257),te=t(4884),re=t(6932);class se{constructor(){this.contexts=[],this.msaaTextures=[],this.msaaSamples=1}}class ie{init(e,t){this._renderer=e,this._renderTargetSystem=t}copyToTexture(e,t,r,s,i){var a=this._renderer,e=this._getGpuColorTexture(e),n=a.texture.getGpuSource(t.source);return a.encoder.commandEncoder.copyTextureToTexture({texture:e,origin:r},{texture:n,origin:i},s),t}startRenderPass(e,t=!0,r,s){var i=this._renderTargetSystem.getGpuRenderTarget(e),e=this.getDescriptor(e,t,r);i.descriptor=e,this._renderer.pipeline.setRenderTarget(i),this._renderer.encoder.beginRenderPass(i),this._renderer.encoder.setViewport(s)}finishRenderPass(){this._renderer.encoder.endRenderPass()}_getGpuColorTexture(e){var t=this._renderTargetSystem.getGpuRenderTarget(e);return t.contexts[0]?t.contexts[0].getCurrentTexture():this._renderer.texture.getGpuSource(e.colorTextures[0].source)}getDescriptor(e,a,n){"boolean"==typeof a&&(a=a?R.u.ALL:R.u.NONE);const o=this._renderTargetSystem,u=o.getGpuRenderTarget(e);var t,r,s=e.colorTextures.map((e,t)=>{var r=u.contexts[t];let s,i;s=r?r.getCurrentTexture().createView():this._renderer.texture.getGpuSource(e).createView({mipLevelCount:1}),u.msaaTextures[t]&&(i=s,s=this._renderer.texture.getTextureView(u.msaaTextures[t]));r=a&R.u.COLOR?"clear":"load";return n=n??o.defaultClearColor,{view:s,resolveTarget:i,clearValue:n,storeOp:"store",loadOp:r}});let i;return!e.stencil&&!e.depth||e.depthStencilTexture||(e.ensureDepthStencilTexture(),e.depthStencilTexture.source.sampleCount=u.msaa?4:1),e.depthStencilTexture&&(t=a&R.u.STENCIL?"clear":"load",r=a&R.u.DEPTH?"clear":"load",i={view:this._renderer.texture.getGpuSource(e.depthStencilTexture.source).createView(),stencilStoreOp:"store",stencilLoadOp:t,depthClearValue:1,depthLoadOp:r,depthStoreOp:"store"}),{colorAttachments:s,depthStencilAttachment:i}}clear(e,t=!0,r,s){var i,a,n;t&&({gpu:i,encoder:a}=this._renderer,i=i.device,null===a.commandEncoder?(a=i.createCommandEncoder(),n=this.getDescriptor(e,t,r),(n=a.beginRenderPass(n)).setViewport(s.x,s.y,s.width,s.height,0,1),n.end(),n=a.finish(),i.queue.submit([n])):this.startRenderPass(e,t,r,s))}initGpuRenderTarget(e){e.isRoot=!0;const i=new se;return e.colorTextures.forEach((e,t)=>{if(te.q.test(e.resource)){var r=e.resource.getContext("webgpu"),s=e.transparent?"premultiplied":"opaque";try{r.configure({device:this._renderer.gpu.device,usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,format:"bgra8unorm",alphaMode:s})}catch(e){console.error(e)}i.contexts[t]=r}i.msaa=e.source.antialias,e.source.antialias&&(s=new re.v({width:0,height:0,sampleCount:4}),i.msaaTextures[t]=s)}),i.msaa&&(i.msaaSamples=4,e.depthStencilTexture)&&(e.depthStencilTexture.source.sampleCount=4),i}destroyGpuRenderTarget(e){e.contexts.forEach(e=>{e.unconfigure()}),e.msaaTextures.forEach(e=>{e.destroy()}),e.msaaTextures.length=0,e.contexts.length=0}ensureDepthStencilTexture(e){var t=this._renderTargetSystem.getGpuRenderTarget(e);e.depthStencilTexture&&t.msaa&&(e.depthStencilTexture.source.sampleCount=4)}resizeGpuRenderTarget(e){const r=this._renderTargetSystem.getGpuRenderTarget(e);r.width=e.width,r.height=e.height,r.msaa&&e.colorTextures.forEach((e,t)=>{r.msaaTextures[t]?.resize(e.source.width,e.source.height,e.source._resolution)})}}class k extends S.l{constructor(e){super(e),this.adaptor=new ie,this.adaptor.init(e,this)}}k.extension={type:[e.Ag.WebGPUSystem],name:"renderTarget"};class O{constructor(){this._gpuProgramData=Object.create(null)}contextChange(e){this._gpu=e}getProgramData(e){return this._gpuProgramData[e._layoutKey]||this._createGPUProgramData(e)}_createGPUProgramData(e){const t=this._gpu.device;var r=e.gpuLayout.map(e=>t.createBindGroupLayout({entries:e}));return this._gpuProgramData[e._layoutKey]={bindGroups:r,pipeline:t.createPipelineLayout({bindGroupLayouts:r})},this._gpuProgramData[e._layoutKey]}destroy(){this._gpu=null,this._gpuProgramData=null}}O.extension={type:[e.Ag.WebGPUSystem],name:"shader"};const ae={normal:{alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"}},add:{alpha:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"one",dstFactor:"one",operation:"add"}},multiply:{alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"dst",dstFactor:"one-minus-src-alpha",operation:"add"}},screen:{alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"one",dstFactor:"one-minus-src",operation:"add"}},overlay:{alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"one",dstFactor:"one-minus-src",operation:"add"}},none:{alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"zero",dstFactor:"zero",operation:"add"}},"normal-npm":{alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha",operation:"add"}},"add-npm":{alpha:{srcFactor:"one",dstFactor:"one",operation:"add"},color:{srcFactor:"src-alpha",dstFactor:"one",operation:"add"}},"screen-npm":{alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"src-alpha",dstFactor:"one-minus-src",operation:"add"}},erase:{alpha:{srcFactor:"zero",dstFactor:"one-minus-src-alpha",operation:"add"},color:{srcFactor:"zero",dstFactor:"one-minus-src",operation:"add"}}};class ne{constructor(){this.defaultState=new f.U,this.defaultState.blend=!0}contextChange(e){this.gpu=e}getColorTargets(e){return[{format:"bgra8unorm",writeMask:0,blend:ae[e.blendMode]||ae.normal}]}destroy(){this.gpu=null}}ne.extension={type:[e.Ag.WebGPUSystem],name:"state"};var oe=t(1761),ue=t(7608);const de={type:"image",upload(e,t,r){var s=e.resource,i=(0|e.pixelWidth)*(0|e.pixelHeight),i=s.byteLength/i;r.device.queue.writeTexture({texture:t},s,{offset:0,rowsPerImage:e.pixelHeight,bytesPerRow:e.pixelHeight*i},{width:e.pixelWidth,height:e.pixelHeight,depthOrArrayLayers:1})}},he={"bc1-rgba-unorm":{blockBytes:8,blockWidth:4,blockHeight:4},"bc2-rgba-unorm":{blockBytes:16,blockWidth:4,blockHeight:4},"bc3-rgba-unorm":{blockBytes:16,blockWidth:4,blockHeight:4},"bc7-rgba-unorm":{blockBytes:16,blockWidth:4,blockHeight:4},"etc1-rgb-unorm":{blockBytes:8,blockWidth:4,blockHeight:4},"etc2-rgba8unorm":{blockBytes:16,blockWidth:4,blockHeight:4},"astc-4x4-unorm":{blockBytes:16,blockWidth:4,blockHeight:4}},ce={blockBytes:4,blockWidth:1,blockHeight:1},le={type:"compressed",upload(t,r,s){let i=t.pixelWidth,a=t.pixelHeight;var n=he[t.format]||ce;for(let e=0;e<t.resource.length;e++){var o=t.resource[e],u=Math.ceil(i/n.blockWidth)*n.blockBytes;s.device.queue.writeTexture({texture:r,mipLevel:e},o,{offset:0,bytesPerRow:u},{width:Math.ceil(i/n.blockWidth)*n.blockWidth,height:Math.ceil(a/n.blockHeight)*n.blockHeight,depthOrArrayLayers:1}),i=Math.max(i>>1,1),a=Math.max(a>>1,1)}}},pe={type:"image",upload(e,t,r){var s,i,a=e.resource;a&&(s=Math.min(t.width,e.resourceWidth||e.pixelWidth),i=Math.min(t.height,e.resourceHeight||e.pixelHeight),e="premultiply-alpha-on-upload"===e.alphaMode,r.device.queue.copyExternalImageToTexture({source:a},{texture:t,premultipliedAlpha:e},{width:s,height:i}))}},fe={type:"video",upload(e,t,r){pe.upload(e,t,r)}};class ge{constructor(e){this.device=e,this.sampler=e.createSampler({minFilter:"linear"}),this.pipelines={}}_getMipmapPipeline(e){let t=this.pipelines[e];return t||(this.mipmapShaderModule||(this.mipmapShaderModule=this.device.createShaderModule({code:`
                        var<private> pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(
                        vec2<f32>(-1.0, -1.0), vec2<f32>(-1.0, 3.0), vec2<f32>(3.0, -1.0));

                        struct VertexOutput {
                        @builtin(position) position : vec4<f32>,
                        @location(0) texCoord : vec2<f32>,
                        };

                        @vertex
                        fn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {
                        var output : VertexOutput;
                        output.texCoord = pos[vertexIndex] * vec2<f32>(0.5, -0.5) + vec2<f32>(0.5);
                        output.position = vec4<f32>(pos[vertexIndex], 0.0, 1.0);
                        return output;
                        }

                        @group(0) @binding(0) var imgSampler : sampler;
                        @group(0) @binding(1) var img : texture_2d<f32>;

                        @fragment
                        fn fragmentMain(@location(0) texCoord : vec2<f32>) -> @location(0) vec4<f32> {
                        return textureSample(img, imgSampler, texCoord);
                        }
                    `})),t=this.device.createRenderPipeline({layout:"auto",vertex:{module:this.mipmapShaderModule,entryPoint:"vertexMain"},fragment:{module:this.mipmapShaderModule,entryPoint:"fragmentMain",targets:[{format:e}]}}),this.pipelines[e]=t),t}generateMipmap(i){var a=this._getMipmapPipeline(i.format);if("3d"===i.dimension||"1d"===i.dimension)throw new Error("Generating mipmaps for non-2d textures is currently unsupported!");let n=i;var e,t=i.depthOrArrayLayers||1,o=i.usage&GPUTextureUsage.RENDER_ATTACHMENT,u=(o||(e={size:{width:Math.ceil(i.width/2),height:Math.ceil(i.height/2),depthOrArrayLayers:t},format:i.format,usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_SRC|GPUTextureUsage.RENDER_ATTACHMENT,mipLevelCount:i.mipLevelCount-1},n=this.device.createTexture(e)),this.device.createCommandEncoder({})),d=a.getBindGroupLayout(0);for(let s=0;s<t;++s){let t=i.createView({baseMipLevel:0,mipLevelCount:1,dimension:"2d",baseArrayLayer:s,arrayLayerCount:1}),r=o?1:0;for(let e=1;e<i.mipLevelCount;++e){var h=n.createView({baseMipLevel:r++,mipLevelCount:1,dimension:"2d",baseArrayLayer:s,arrayLayerCount:1}),c=u.beginRenderPass({colorAttachments:[{view:h,storeOp:"store",loadOp:"clear",clearValue:{r:0,g:0,b:0,a:0}}]}),l=this.device.createBindGroup({layout:d,entries:[{binding:0,resource:this.sampler},{binding:1,resource:t}]});c.setPipeline(a),c.setBindGroup(0,l),c.draw(3,1,0,0),c.end(),t=h}}if(!o){var r={width:Math.ceil(i.width/2),height:Math.ceil(i.height/2),depthOrArrayLayers:t};for(let e=1;e<i.mipLevelCount;++e)u.copyTextureToTexture({texture:n,mipLevel:e-1},{texture:i,mipLevel:e},r),r.width=Math.ceil(r.width/2),r.height=Math.ceil(r.height/2)}return this.device.queue.submit([u.finish()]),o||n.destroy(),i}}class me{constructor(e){this.managedTextures=[],this._gpuSources=Object.create(null),this._gpuSamplers=Object.create(null),this._bindGroupHash=Object.create(null),this._textureViewHash=Object.create(null),this._uploads={image:pe,buffer:de,video:fe,compressed:le},this._renderer=e}contextChange(e){this._gpu=e}initSource(e){e.autoGenerateMipmaps&&(r=Math.max(e.pixelWidth,e.pixelHeight),e.mipLevelCount=Math.floor(Math.log2(r))+1);let t=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST;"compressed"!==e.uploadMethodId&&(t=(t|=GPUTextureUsage.RENDER_ATTACHMENT)|GPUTextureUsage.COPY_SRC);var r=he[e.format]||{blockBytes:4,blockWidth:1,blockHeight:1},s=Math.ceil(e.pixelWidth/r.blockWidth)*r.blockWidth,r=Math.ceil(e.pixelHeight/r.blockHeight)*r.blockHeight,s={label:e.label,size:{width:s,height:r},format:e.format,sampleCount:e.sampleCount,mipLevelCount:e.mipLevelCount,dimension:e.dimension,usage:t},r=this._gpu.device.createTexture(s);return this._gpuSources[e.uid]=r,this.managedTextures.includes(e)||(e.on("update",this.onSourceUpdate,this),e.on("resize",this.onSourceResize,this),e.on("destroy",this.onSourceDestroy,this),e.on("unload",this.onSourceUnload,this),e.on("updateMipmaps",this.onUpdateMipmaps,this),this.managedTextures.push(e)),this.onSourceUpdate(e),r}onSourceUpdate(e){var t=this.getGpuSource(e);t&&(this._uploads[e.uploadMethodId]&&this._uploads[e.uploadMethodId].upload(e,t,this._gpu),e.autoGenerateMipmaps)&&1<e.mipLevelCount&&this.onUpdateMipmaps(e)}onSourceUnload(e){var t=this._gpuSources[e.uid];t&&(this._gpuSources[e.uid]=null,t.destroy())}onUpdateMipmaps(e){this._mipmapGenerator||(this._mipmapGenerator=new ge(this._gpu.device));e=this.getGpuSource(e);this._mipmapGenerator.generateMipmap(e)}onSourceDestroy(e){e.off("update",this.onSourceUpdate,this),e.off("unload",this.onSourceUnload,this),e.off("destroy",this.onSourceDestroy,this),e.off("resize",this.onSourceResize,this),e.off("updateMipmaps",this.onUpdateMipmaps,this),this.managedTextures.splice(this.managedTextures.indexOf(e),1),this.onSourceUnload(e)}onSourceResize(e){var t=this._gpuSources[e.uid];t?t.width===e.pixelWidth&&t.height===e.pixelHeight||(this._textureViewHash[e.uid]=null,this._bindGroupHash[e.uid]=null,this.onSourceUnload(e),this.initSource(e)):this.initSource(e)}_initSampler(e){return this._gpuSamplers[e._resourceId]=this._gpu.device.createSampler(e),this._gpuSamplers[e._resourceId]}getGpuSampler(e){return this._gpuSamplers[e._resourceId]||this._initSampler(e)}getGpuSource(e){return this._gpuSources[e.uid]||this.initSource(e)}getTextureBindGroup(e){return this._bindGroupHash[e.uid]??this._createTextureBindGroup(e)}_createTextureBindGroup(e){var e=e.source,t=e.uid;return this._bindGroupHash[t]=new M.T({0:e,1:e.style}),this._bindGroupHash[t]}getTextureView(e){e=e.source;return this._textureViewHash[e.uid]??this._createTextureView(e)}_createTextureView(e){return this._textureViewHash[e.uid]=this.getGpuSource(e).createView(),this._textureViewHash[e.uid]}generateCanvas(e){var t=this._renderer,r=t.gpu.device.createCommandEncoder(),s=oe.e.get().createCanvas(),i=(s.width=e.source.pixelWidth,s.height=e.source.pixelHeight,s.getContext("webgpu"));return i.configure({device:t.gpu.device,usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC,format:navigator.gpu.getPreferredCanvasFormat(),alphaMode:"premultiplied"}),r.copyTextureToTexture({texture:t.texture.getGpuSource(e.source),origin:{x:0,y:0}},{texture:i.getCurrentTexture()},{width:s.width,height:s.height}),t.gpu.device.queue.submit([r.finish()]),s}getPixels(e){var e=this.generateCanvas(e),t=ue.N.getOptimalCanvasAndContext(e.width,e.height),r=t.context,{width:e,height:s}=(r.drawImage(e,0,0),e),r=r.getImageData(0,0,e,s),r=new Uint8ClampedArray(r.data.buffer);return ue.N.returnCanvasAndContext(t),{pixels:r,width:e,height:s}}destroy(){this.managedTextures.slice().forEach(e=>this.onSourceDestroy(e)),this.managedTextures=null;for(const t of Object.keys(this._bindGroupHash)){var e=Number(t);this._bindGroupHash[e]?.destroy(),this._bindGroupHash[e]=null}this._gpu=null,this._mipmapGenerator=null,this._gpuSources=null,this._bindGroupHash=null,this._textureViewHash=null,this._gpuSamplers=null}}me.extension={type:[e.Ag.WebGPUSystem],name:"texture"};S=[..._.i,C,G,v,x,me,k,O,ne,A,y,B,b],t=[..._.f,E],_=[m,p,c];const _e=[],be=[],xe=[];e.XO.handleByNamedList(e.Ag.WebGPUSystem,_e),e.XO.handleByNamedList(e.Ag.WebGPUPipes,be),e.XO.handleByNamedList(e.Ag.WebGPUPipesAdaptor,xe),e.XO.add(...S,...t,..._);class ye extends D.k{constructor(){super({name:"webgpu",type:W.W.WEBGPU,systems:_e,renderPipes:be,renderPipeAdaptors:xe})}}},7608:(e,t,r)=>{r.d(t,{N:()=>a});var s=r(1761),i=r(9939);const a=new class{constructor(e){this._canvasPool=Object.create(null),this.canvasOptions=e||{},this.enableFullScreen=!1}_createCanvasAndContext(e,t){var r=s.e.get().createCanvas(),e=(r.width=e,r.height=t,r.getContext("2d"));return{canvas:r,context:e}}getOptimalCanvasAndContext(e,t,r=1){e=Math.ceil(e*r-1e-6),t=Math.ceil(t*r-1e-6);r=((e=(0,i.U5)(e))<<17)+((t=(0,i.U5)(t))<<1);this._canvasPool[r]||(this._canvasPool[r]=[]);let s=this._canvasPool[r].pop();return s=s||this._createCanvasAndContext(e,t)}returnCanvasAndContext(e){var{width:t,height:r}=e.canvas;this._canvasPool[(t<<17)+(r<<1)].push(e)}clear(){this._canvasPool={}}}}}]);